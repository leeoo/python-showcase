#!/usr/bin/env python
# -*- coding: utf-8 -*-

pdb_header_format = [
    [0x00, 's', 'pdb_name', 'database name. This name is 0 terminated in the field and will be used as the file name on a computer.'],
    [0x20, 'i', 'attributes', 'bit field. For kindle ebook, usually 0.'],
    [0x22, 'i', 'file_version', 'For kindle ebook, usually 0.'],
    [0x24, 't', 'creation_date', 'Seconds since 1970-01-01 00:00:00. UTC time.'],
    [0x28, 't', 'modification_date', 'Seconds since 1970-01-01 00:00:00. UTC time.'],
    [0x2c, 'i', 'last_backup_date', 'Seconds since 1970-01-01 00:00:00. Usually 0.'],
    [0x30, 'i', 'modification_number', 'For kindle ebook, usually 0.'],
    [0x34, 'i', 'app_info_id', 'For kindle ebook, usually 0.'],
    [0x38, 'i', 'sort_info_id', 'For kindle ebook, usually 0.'],
    [0x3c, 's', 'type_creator', "For kindle ebook, should be 'BOOKMOBI'"],
    [0x44, 'i', 'unique_id_seed', 'used internally to identify record'],
    [0x48, 'i', 'next_record_list_id', 'usually 0'],
    [0x4c, 'i', 'record_count', 'number of records in the file - N'],
    [0x4e, '_', '', ''] # 人为加入，不是真正的内容
]

# IOR (Info of Record)
ior_format = [
    [0x00, 'x', 'record_offset', ''],
    [0x04, 'i', 'record_attribs', ''],
    [0x05, 'i', 'record_unique_id', ''],
    [0x08, '_', '', ''] # 人为加入，不是真正的内容
]

value_mapper = {
    'compression_type' : {
        1     : 'no compression',
        2     : 'PalmDOC compression',
        17480 : 'HUFF/CDIC compression',
    },
    'crypto_type' : {
        0 : 'no encryption',
        1 : 'Old Mobipocket Encryption',
        2 : 'Mobipocket Encryption',
    },
    'mobi_type' : {
          2 : 'Mobipocket Book',
          3 : 'PalmDoc Book',
          4 : 'Audio',
        232 : 'mobipocket? generated by kindlegen1.2',
        248 : 'KF8: generated by kindlegen2',
        257 : 'News',
        258 : 'News_Feed',
        259 : 'News_Magazine',
        513 : 'PICS',
        514 : 'WORD',
        515 : 'XLS',
        516 : 'PPT',
        517 : 'TEXT',
        518 : 'HTML',
    },
    'encoding' : {
        1252  : 'CP1252 (WinLatin1)',
        65001 : 'UTF-8',
    },
    '204(Creator_software)' : {
          1 : 'mobigen',
          2 : 'Mobipocket Creator',
        200 : 'kindlegen/win',
        201 : 'kindlegen/linux',
        202 : 'kindlegen/mac',
    },
}

PalmDOC_header_format = [
    [0x00, 'i', 'compression_type', ''],
    [0x02, 'i', 'fill0', ''],
    [0x04, 'i', 'text_length', ''],
    [0x08, 'i', 'text_rec_count', 'Number of PDB records used for the text of the book.'], # 紧随 header 记录之后
    [0x0a, 'i', 'text_rec_max_size', ''],
    [0x0c, 'i', 'crypto_type', ''],
    [0x0e, 'i', 'fill1', ''],
    [0x10, '_', '', '']
]

kf8_header_format = [
    [0x000, 's', 'mobi_identifier', ''],
    [0x004, 'i', 'mobi_header_len', ''], # 从 'mobi_identifier' 开始，不包括前面的 PalmDOC Header 的长度，这样的解释下， HEADER 记录里 MOBI Header 与其后的 EXTH Header 之间便没有间隙。
    [0x008, 'i', 'mobi_type', ''],
    [0x00c, 'i', 'encoding', ''],
    [0x010, 'i', 'unique_id', ''],
    [0x014, 'i', 'kf_version', ''],
    [0x018, 'i', 'metaorthindex', ''],
    [0x01c, 'f', 'inflect_idx_rec_id', 'Inflection index record id. 0xFFFFFFFF if index is not available.'],
    [0x020, 'f', 'index_names', '0xFFFFFFFF if index is not available.'],
    [0x024, 'f', 'index_keys', '0xFFFFFFFF if index is not available.'],
    [0x028, 'f', 'extra_index0', '0xFFFFFFFF if index is not available.'],
    [0x02c, 'f', 'extra_index1', '0xFFFFFFFF if index is not available.'],
    [0x030, 'f', 'extra_index2', '0xFFFFFFFF if index is not available.'],
    [0x034, 'f', 'extra_index3', '0xFFFFFFFF if index is not available.'],
    [0x038, 'f', 'extra_index4', '0xFFFFFFFF if index is not available.'],
    [0x03c, 'f', 'extra_index5', '0xFFFFFFFF if index is not available.'],
    [0x040, 'i', 'first_nontext', ''],
    [0x044, 'x', 'title_offset', 'Offset in record 0 (not from start of file) of the full name of the book.'],
    [0x048, 'i', 'title_length', ''],
    [0x04c, 'i', 'language_code', 'Book locale code. Low byte is main language 09= English, next byte is dialect, 08 = British, 04 = US. Thus US English is 1033, UK English is 2057.'],
    [0x050, 'i', 'dict_in_lang', ''],
    [0x054, 'i', 'dict_out_lang', ''],
    [0x058, 'i', 'min_version', ''],
    [0x05c, 'i', 'first_resc_offset', ''],
    [0x060, 'i', 'huff_offset', ''],
    [0x064, 'i', 'huff_count', ''],
    [0x068, 'i', 'huff_tbl_offset', ''],
    [0x06c, 'i', 'huff_tbl_count', ''],
    [0x070, 'x', 'exth_flags', ''],
    [0x074, 'i', 'fill3_a', ''],
    [0x078, 'i', 'fill3_b', ''],
    [0x07c, 'i', 'fill3_c', ''],
    [0x080, 'i', 'fill3_d', ''],
    [0x084, 'i', 'fill3_e', ''],
    [0x088, 'i', 'fill3_f', ''],
    [0x08c, 'i', 'fill3_g', ''],
    [0x090, 'i', 'fill3_h', ''],
    [0x094, 'f', 'unknown0', 'Usually 0xFFFFFFFF.'],
    [0x098, 'f', 'drm_offset', 'Offset to DRM key info in DRMed files. 0xFFFFFFFF if no DRM.'],
    [0x09c, 'i', 'drm_count', ''],
    [0x0a0, 'i', 'drm_size', ''],
    [0x0a4, 'i', 'drm_flags', ''],
    [0x0a8, 'i', 'fill4_a', ''],
    [0x0ac, 'i', 'fill4_b', ''],
    [0x0b0, 'i', 'first_con_record', ''],
    [0x0b2, 'i', 'last_con_record', ''],
    [0x0b4, 'i', 'fdst_flow_count', ''],
    [0x0b8, 'i', 'fcis_record_id', ''],
    [0x0bc, 'i', 'fcis_record_count', ''],
    [0x0c0, 'i', 'flis_record_id', ''],
    [0x0c4, 'i', 'flis_record_count', ''],
    [0x0c8, 'i', 'unknown1', ''],
    [0x0cc, 'i', 'unknown2', ''],
    [0x0d0, 'f', 'srcs_offset', ''],
    [0x0d4, 'i', 'srcs_count', ''],
    [0x0d8, 'f', 'unknown3', ''],
    [0x0dc, 'f', 'unknown4', ''],
    [0x0e0, 'i', 'fill5', ''],
    [0x0e2, 'i', 'traildata_flags', ''],
    [0x0e4, 'f', 'ncx_index_ri', 'Record id of the first INDX record created from ncx file. 0xFFFFFFFF if not available. Offset to MOBI Header record.'],
    [0x0e8, 'f', 'fragment_index_ri', 'Record id of the first INDX record for fragment index. 0xFFFFFFFF if not available.'],
    [0x0ec, 'f', 'skeleton_index_ri', 'Record id of the first INDX record for skeleton index. 0xFFFFFFFF if not available.'],
    [0x0f0, 'i', 'datp_record_id', ''],
    [0x0f4, 'f', 'guide_index_ri', 'Record id of the first INDX record for guide index. 0xFFFFFFFF if not available.'],
    [0x0f8, 'f', 'gesw_offset', ''],
    [0x0fc, 'i', 'gesw_count', ''],
    [0x100, 'f', 'unknown', ''],
    [0x104, 'f', 'unknown', ''],
    [0x108, '_', '', '']
]

exth_header_format = [
    [0x00, 's', 'exth_identifier', ''],
    [0x04, 'i', 'exth_length', ''],
    [0x08, 'i', 'exth_mdata_count', ''],
    [0x0c, '_', '', '']
]

exth_mdata_format = {
          1 : ['s', 'Drm Server Id'],
          2 : ['s', 'Drm Commerce Id'],
          3 : ['s', 'Drm_Ebookbase_Book_Id', ''],
        100 : ['s', 'Author', '<dc:Creator>'],
        101 : ['s', 'Publisher', '<dc:Publisher>'],
        102 : ['s', 'Imprint_(102)'],
        103 : ['s', 'Description', '<dc:Description>'],
        104 : ['s', 'ISBN_(104)'],
        105 : ['s', 'Subject_(105)'],
        106 : ['s', 'Publishing_date', '<dc:Date>'],
        107 : ['s', 'Review_(107)'],
        108 : ['s', 'Contributor_(108)'],
        109 : ['s', 'Rights', '<dc:Rights>'], # 版权
        110 : ['s', 'SubjectCode_(110)'],
        111 : ['s', 'Type', '<dc:Type>'],
        112 : ['s', 'Source_(112)'],
        113 : ['s', 'ASIN'],
        114 : ['s', 'versionNumber_(114)'],
        115 : ['i', 'Is_sample', '1 if the book content is only a sample of the full book.'],
        116 : ['i', 'Start_position', 'Position in file at which to open when first opened.'],
        117 : ['s', 'Adult_(117)'],
        118 : ['s', 'Price_(118)'],
        119 : ['s', 'Currency_(119)'],
        121 : ['i', 'KF8_boundary_ri', ''], # 对于 KF6 Header 实际应该是 KF8 HEADER record id? 对于 KF8 Header 为其它含义
        122 : ['s', 'fixed-layout_(122)'],
        123 : ['s', 'book-type_(123)'],
        124 : ['s', 'orientation-lock_(124)'],
        125 : ['i', 'resource_rec_count'],
        126 : ['s', 'original-resolution_(126)'],
        127 : ['s', 'zero-gutter_(127)'],
        128 : ['s', 'zero-margin_(128)'],
        129 : ['s', 'KF8_cover_URI', 's'],
        131 : ['i', 'K8_Unidentified_Count', ''],
        132 : ['s', 'RegionMagnification_(132)'],
        200 : ['s', 'DictShortName_(200)'],
        201 : ['i', 'Cover_Offset'], # 封面 record 编号 - 第一个 image record 编号
        202 : ['i', 'Thumb_Offset'], # 封面缩略图 record 编号 - 第一个 image record 编号
        203 : ['i', 'Has_fake_cover'],
        204 : ['i', 'Creator_software', '', None],
        205 : ['i', 'Creator_major_version', ''],
        206 : ['i', 'Creator_minor_version', ''],
        207 : ['i', 'Creator_build_number', ''],
        208 : ['s', 'Watermark'],
        209 : ['h', 'Tamper_Proof_Keys', 'Used by Kindle (and Android app) for generating book-specific PIDs.'],
        300 : ['h', 'Font_signature', ''],
        401 : ['i', 'Clipping_Limit', 'Integer percentage of the text allowed to be clipped. Usually 10.'],
        402 : ['i', 'Publisher_Limit_(402)'],
        403 : ['i', 'Unknown'],
        404 : ['i', 'Text_to_Speech_Disabled', '1 - disabled; 0 - enabled.'],
        405 : ['i', 'Rent', '1 in this field seems to indicate a rental book.'],
        406 : ['i', 'Rent_date', 'Rent/Borrow Expiration Date'], # If this field is removed from a rental, the book says it expired in 1969. 长度 8 字节
        407 : ['i', 'Unknown'],
        501 : ['s', 'cdetype', 'PDOC - Personal Doc; EBOK - ebook; EBSP - ebook sample.'],
        502 : ['s', 'last_update_time_(502)'],
        503 : ['s', 'Updated_Title'],
        504 : ['s', 'ASIN'],
        508 : ['s', 'Title_in_PinYin'],
        517 : ['s', 'Author_in_PinYin'],
        522 : ['s', 'Publisher_in_PinYin'],
        524 : ['s', 'Language', '<dc:Language>'],
        525 : ['s', 'Alignment', 'Usually horizontal-lr'],
        526 : ['s', 'Unknown_(526)'],
        527 : ['s', 'page-progression-direction_(527)'],
        528 : ['s', 'Override_kindle_fonts', ''],
        529 : ['s', 'kindlegen_Source-Target', ''],
        534 : ['s', 'Input_Source_Type', ''],
        535 : ['s', 'Kindlegen_build_number', ''],
        536 : ['s', 'Container_Info', ''], # CONT_Header is 0, Ends with CONTAINER_BOUNDARY (or Asset_Type?)
        538 : ['s', 'Container_Resolution_(538)'],
        539 : ['s', 'Container_Mimetype_(539)'],
        542 : ['s', 'Related_to_filename', ''],
        543 : ['s', 'Container_id_(543)'],  # FONT_CONTAINER, BW_CONTAINER HD_CONTAINER
        544 : ['s', 'Unknown_(544)'],
}

guess_types = {
    'CONTBOUNDARY' : 'CONTBOUNDARY',
    'KINDLE:EMBED' : 'KINDLE:EMBED',
    'BOUNDARY' : 'BOUNDARY',
    'CONT' : 'CONT',
    'CRES' : 'CRES',
    'DATP' : 'DATP',
    'FCIS' : 'FCIS',
    'FDST' : 'FDST',
    'FLIS' : 'FLIS',
    'FONT' : 'FONT',
    'GESW' : 'GESW',
    'IDXT' : 'IDXT',
    'INDX' : 'INDX',
    'RESC' : 'RESC',
    '\xa0\xa0\xa0\xa0' : 'Empty Resource Placeholder',
    '\xe9\x8e\x0d\x0a' : 'EOF',
}

MOBI_HEADER_LEN = 0X108 # HEADER 记录里的 MOBI Header 长度

THUMB_MAX_SIZE = (220, 330)

NONE_OFFSET = 0xffffffff

# he: header entry

def he_count(header_format):
    return len(header_format) - 1

def he_offset(header_format, i):
    return header_format[i][0]

def he_len(header_format, i):
    return he_offset(header_format, i+1) - he_offset(header_format, i)

def he_type(header_format, i):
    return header_format[i][1]

def he_name(header_format, i):
    return header_format[i][2]

def he_desc(header_format, i):
    return header_format[i][3]

def header_len(header_format):
    return he_offset(header_format, -1)

def exth_mdata_name(exth_mdata_id):
    return '{0:03d}({1})'.format(exth_mdata_id, exth_mdata_format[exth_mdata_id][1])
